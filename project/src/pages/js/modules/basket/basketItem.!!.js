class BasketItem {
    constructor(containerClass, item) {
        // –ù–∞–π—Ç–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –∫–ª–∞—Å—Å–æ–º
        const container = document.querySelector(`.${containerClass}`);
        if (!container) {
            throw new Error(`Container with class '${containerClass}' not found.`);
        }

        // –°–æ–∑–¥–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è —Ç–æ–≤–∞—Ä–∞
        const basketItemContainer = document.createElement("div");
        basketItemContainer.className = "basket-item";

        // –°–æ–∑–¥–∞—Ç—å —Ç–µ–ª–æ —ç–ª–µ–º–µ–Ω—Ç–∞ —Å —Å–æ–¥–µ—Ä–∂–∏–º—ã–º
        const basketItemBody = document.createElement("div");
        basketItemBody.className = "card-body";

        // –ó–∞–ø–æ–ª–Ω–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–∞—Ä—Ç–æ—á–∫–∏
        basketItemBody.innerHTML = `
            <div class="row">        
                <div class="col-5 col-sm-3 col-md-2">
                    <img class="image" src="${item?.mediaFiles[0]?.mediaKey || 'default-image.png'}" alt="${item?.productName}">
                </div>        
                <div class="col-7 col-sm-9 col-md-10">        
                    <div class="row">
                        <div class="col-12 col-sm-12 col-md-4">
                            <div class="basket-card-title">${item?.productName || 'Product Name'}</div>
                        </div>
                        <div class="col-12 col-xs-6 col-sm-4 col-md-2">
                            <basket-button 
                                class="button-add-to-basket" 
                                product-id="${item?.productId}"
                                basket-skin="white" 
                                basket-count="${item?.quantity || 0}">
                            </basket-button>
                        </div>
                        <div class="col-12 col-sm-2 col-md-2">
                            <div class="basket-card-price" for="${item?.productId}">
                                ${(item?.quantity || 0) * (item?.price || 0)} ‚ÇΩ
                            </div>
                        </div>
                        <div class="col-4 col-sm-2 col-md-1">
                            <i class="fa-regular fa-heart basket-card-heart-hotkey"></i>
                        </div>
                        <div class="col-8 col-sm-1 col-md-1">
                            <i class="fa-solid fa-trash-alt basket-card-trash-hotkey"></i>
                            <div class="basket-delete-timer" style="display: none; font-size: 0.9em; color: red;"></div>
                        </div>
                    </div>
                </div>                                             
            </div>`;

        // –í—Å—Ç–∞–≤–∏—Ç—å —Ç–µ–ª–æ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Ç–æ–≤–∞—Ä–∞
        basketItemContainer.appendChild(basketItemBody);

        // –î–æ–±–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Ç–æ–≤–∞—Ä–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        container.appendChild(basketItemContainer);

        // üéØ –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
        this.setupDeleteHandler(basketItemContainer, item);
    }

    setupDeleteHandler(basketItemContainer, item) {
        const trashIcon = basketItemContainer.querySelector('.basket-card-trash-hotkey');
        const deleteTimerEl = basketItemContainer.querySelector('.basket-delete-timer');
        let countdown = 5; // –¢–∞–π–º–µ—Ä –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
        let countdownInterval;

        trashIcon.addEventListener('click', () => {
            if (countdownInterval) return; // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω–æ–µ –Ω–∞–∂–∞—Ç–∏–µ

            deleteTimerEl.style.display = 'block';
            deleteTimerEl.innerHTML = `–£–¥–∞–ª–∏—Ç—Å—è —á–µ—Ä–µ–∑ ${countdown} <a href="#" class="basket-cancel-delete">–û—Ç–º–µ–Ω–∏—Ç—å</a>`;

            countdownInterval = setInterval(() => {
                countdown -= 1;
                deleteTimerEl.innerHTML = `–£–¥–∞–ª–∏—Ç—Å—è —á–µ—Ä–µ–∑ ${countdown} <a href="#" class="basket-cancel-delete">–û—Ç–º–µ–Ω–∏—Ç—å</a>`;

                if (countdown <= 0) {
                    clearInterval(countdownInterval);
                    this.declineItem(item?.productId)
                        .then(() => {
                            basketItemContainer.remove();
			    toastr.success('–¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã', '–¢–æ–≤–∞—Ä—ã', {timeOut: 3000});
			    deleteTimerEl.remove();
                        })
                        .catch((error) => {
                            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞:', error);
			    toastr.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã', '–¢–æ–≤–∞—Ä—ã', {timeOut: 3000});
			    deleteTimerEl.remove();
                        });
                }
            }, 1000);

            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–º–µ–Ω—ã
            deleteTimerEl.querySelector('.basket-cancel-delete').addEventListener('click', (e) => {
                e.preventDefault();
                clearInterval(countdownInterval);
                countdownInterval = null;
                countdown = 5; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–∞–π–º–µ—Ä
                deleteTimerEl.style.display = 'none';
            });
        });
    }

    async declineItem(productId) {
        try {
            const response = await fetch('/basket/item/decline', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ productId })
            });

            if (!response.ok) {
                throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞');
            }

            console.log('–¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω');
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞:', error);
            throw error;
        }
    }
}
