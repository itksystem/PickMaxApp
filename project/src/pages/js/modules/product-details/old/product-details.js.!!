class ProductDetails extends HTMLElement {
  constructor() {
    super();
    let o = this;
    this.api = new WebAPI();
    this.common = new CommonFunctions();
    this.attachShadow({ mode: 'open' });
    // Шаблон компонента
    const template = document.createElement('template');
    template.innerHTML = `
      <link rel="stylesheet" href="/src/pages/js/modules/product-details/css/product-details.css">
      <link rel="stylesheet" href="/src/pages/css/bootstrap.min.css">
        <div class = "product-details-card-dialog">
         <div class = "product-details-card-box">
             <div class="ribbon-wrapper ribbon-lg">
                <div class="ribbon"></div>
             </div>
	<icon-button  template="return" redirect="/products/page" style="position: absolute; left: 2rem; top: 1rem;"></icon-button>
	<icon-button  template="like" style="position: absolute; right: 4rem; top: 1rem;"></icon-button>
	<image-gallery
	  title="Amazing Product"
	  images="https://openfsm.ru/main/pages/telegram/jobs/images/shops/88aa0800-1343-11ec-aecd-0242ac140000/45640ba7-d044-4ec6-b9fb-190aaabffe62.jpg,https://openfsm.ru/main/pages/telegram/jobs/images/shops/88aa0800-1343-11ec-aecd-0242ac140000/c12da366-9a80-4bc7-ae41-e98f3a91638b.jpg,https://openfsm.ru/main/pages/telegram/jobs/images/shops/88aa0800-1343-11ec-aecd-0242ac140000/676b72f9-8f67-4dc2-b930-74ccc4a4c645.jpg",
	  show-indicators
	  loop
	  event="event" 
	  id="1000" 
	  autoplay	
	  autoplay-interval=5000
	  active-index="0">  
	</image-gallery>


        <div class="product-details__swiper">
          <div class="product-details__swiper-container">
          </div>
          <div class="product-details__swiper-indicators"></div>
        </div>
        <div class="product-details__content">
     	  <div class="row">
           <div class="col-6">
              <p>
               <span class="product-details__price"></span>     
               <del class="price-block__old-price"></del>     
              </p>
	    </div>
            <div class="col-6">
               <div class="product-details__btn-group">
	 	 <div class="row">
        	   <div class="col-12">
                      <stars-rating stars="0" readonly=true ></stars-rating>
                   </div>
        	   <div class="col-12">
                      <reviews></reviews>
		   </div>
                 </div>		
              </div>
            </div>
       </div>
     </div>
	    <div class="discount-box"></div>
   </div>
	 <div class="product-details-card-title-box">
		<div class="row">
	  	 <div class="col-12">
        	    <div class="product-details__seller-type"></div>
	         </div>
		 <div class="col-12">
	            <div class="product-details__title"></div>
	         </div>
               </div>
         </div>

	<dropdown-section>
		  <span slot="title">Описание товара</span>
	  	  <p class="product-details__description"></p>
        </dropdown-section>


	 <div class="row">
           <div class="col-6 pe-1">
		<dropdown-section class="reviews-box" link="">
		  <span slot="title">Отзывы о товаре</span>
  		  <p class="product-details__reviews"></p>
	        </dropdown-section>
	   </div>
           <div class="col-6 ps-1">
		<dropdown-section class="mail-box" link="/products/mailbox/">
		  <span slot="title">Ваша переписка</span>
  		  <p class="product-details__reviews"></p>
	        </dropdown-section>
	    </div>
        </div>

	<dropdown-section class="see-also-box" aria-expanded="true">
		  <span slot="title">Смотреть также</span>
	  	  <div class="product-card-container"></div>
        </dropdown-section>

       <div class="product-details-add-basket-button-box">   	
	<div class="row">
           <div class="col-12">
              <div>
               <span class="product-details__price"></span>     
               <del class="price-block__old-price"></del>     
   	       <div class="product-details__short_title text-truncate" style="max-width: fit-content; padding: 0.4rem;"></div>
              </div>
	   </div>
           <div class="col-12">
                 <basket-button class="button-add-to-basket"></basket-button>
           </div>
       </div>
      </div>
    </div>
    `;
    // Добавление шаблона в shadow DOM
    this.shadowRoot.appendChild(template.content.cloneNode(true));
  }

  connectedCallback() {
    this._render();
    this._addEventListeners();                          
  }

  _getDiscount(discount){
   return (discount > 0 ) ? `Скидка ${discount}%` : ``;
  }



  _render() {
    // Заполнение данных
    this.shadowRoot.querySelector('.product-details__description').textContent = this.getAttribute('description') || 'Product Description';

    this.shadowRoot.querySelectorAll('.product-details__price').forEach(el => {
       el.textContent = this.getAttribute('price') || '$0.00';
    });
    this.shadowRoot.querySelectorAll('del').forEach(el => {
        el.textContent = this.getAttribute('del-price') || '$0.00';
    });
    this.shadowRoot.querySelectorAll('.product-details__title').forEach(el => {
        el.textContent = this.getAttribute('title') || '';
    });
    this.shadowRoot.querySelectorAll('.product-details__short_title').forEach(el => {
        el.textContent = this.getAttribute('title') || '';
    });

   /* */
    this.setRating(this.shadowRoot.querySelector('stars-rating'), (this.getAttribute('reviews') || 0));
    this.setMailsBox(this.getAttribute("product-id") || null);
    this.setStarsRatingProductId(this.getAttribute("product-id") || null);
    this.setReviewsBox(this.getAttribute("product-id") || null);
    this.setLikeButton((this.getAttribute('like') || 0), (this.getAttribute('product-id') || null));
    this.setDiscountBox(this._getDiscount(this.getAttribute('discount') || 0));
    this.setSellerTypeBox(this.common.sellerType(this.getAttribute('seller-type') || ''));
    this.setSeeAlsoBox();
    this.setBasketAddButton();
    this._slideUpFromBottom('.product-details-add-basket-button-box');
  }

  _addEventListeners() {
    let o = this;
  }

  setSeeAlsoBox(){
    try {
        let o = this;
        o.page = 1;
        let webRequest = new WebRequest();
        const urlParams = new URLSearchParams(window.location.search); // Получаем текущий URL
        const active = urlParams.get('active'); // Извлекаем значение параметра 'active'

        
        function loadProducts(page) { // Функция загрузки товаров с пагинацией
            if (o.loading) return;    // Предотвращаем повторную загрузку
            o.loading = true;
            
            let request = webRequest.post(o.api.getShopProductsMethod(o.page, o.limit), {}, false )
            .then(function(data) {
                data.forEach(product => {
			const container = o.shadowRoot.querySelector("div.product-card-container");
			console.log(product);

			const productCard = document.createElement('product-card');
		        productCard.setAttribute('product-id', product.productId);
		        productCard.setAttribute('like', product.like);
		        productCard.setAttribute('status', 'active');
		        productCard.setAttribute('image-src', product.mediaFiles[0]?.mediaKey || '');
		        productCard.setAttribute('image-alt', product.productName);
		        productCard.setAttribute('brand', 'Brand');
		        productCard.setAttribute('name', product.productName);
		        productCard.setAttribute('current-price', product.price);
		        productCard.setAttribute('old-price', product.price * 1.3);
		        productCard.setAttribute('currency-type', '₽');
		        productCard.setAttribute('aria-label', product.productName);
		        productCard.setAttribute('basket-count', product.basketCount);

			container.appendChild(productCard);

               });
                o.loading = false; // Сбрасываем флаг загрузки
            })
            .catch(function(error) {
                console.log('initializeProductCard.Произошла ошибка =>', error);
		toastr.error('Ошибка при получении товаров', 'Товары', {timeOut: 3000});
                o.loading = false; // Сбрасываем флаг загрузки при ошибке
            });
        }

        // Изначально загружаем первую порцию товаров
        loadProducts(o.page);

        // Обработчик прокрутки страницы для догрузки товаров
        $(window).on('scroll', function() {
            if ($(window).scrollTop() + $(window).height() >= $(document).height() - 100) {
                o.page++; // Увеличиваем номер страницы
                loadProducts(o.page); // Загружаем следующую порцию товаров
            }
        });

    } catch (e) {
        console.log('initializeProductCard.catch =>', e);
    }
    return this;
 }

  setRating(rating = null, reviews = null){
    rating?.setAttribute('stars', this.getAttribute('stars') || 0); // Устанавливаем новое значение атрибута
    rating?.setAttribute('reviews', reviews ); // Устанавливаем новое значение атрибут
  }

  setReviewsBox(productId = null){
    let reviewsSection =this.shadowRoot.querySelector('dropdown-section.reviews-box');
    if(reviewsSection) {
      reviewsSection.setAttribute("link", this.api.getProductReviewCardMethod(productId));
    }
  }

  setMailsBox(productId = null){
    let mailsSection =this.shadowRoot.querySelector('dropdown-section.mail-box');
    if(mailsSection) {
      mailsSection.setAttribute("link", this.api.getProductMailsCardMethod(productId));
    }
  }

  setStarsRatingProductId(productId = null){
    let _stars_rating = this.shadowRoot?.querySelector('stars-rating');
    _stars_rating?.setAttribute("product-id", productId);
  }

  setSellerTypeBox(sellerType = null){
    this.shadowRoot.querySelector('.product-details__seller-type').innerHTML = sellerType;
  }

  setDiscountBox(discount = null){
    this.shadowRoot.querySelector('.discount-box').innerHTML = discount;
  }

  setLikeButton(like = null, likes = null){
    const likeButton = this.shadowRoot.querySelector('icon-button[template="like"]');
    likeButton?.setAttribute('value', like); 
    likeButton?.setAttribute('id', likes); 
   }

  setBasketAddButton(){
    const basketButton = this.shadowRoot.querySelector('basket-button.button-add-to-basket');
    basketButton.setAttribute('product-id', this.getAttribute("product-id")); 
  }

 setLike(productId , status) {
     let o = this; 
     let webRequest = new WebRequest();
     let request = webRequest.post(o.api.setProductLikeMethod(productId),  {productId , status}, false )
     .then(function(data) {
      })                                               
     .catch(function(error) {
       console.log('setLike.Произошла ошибка =>', error);
     });
   }


/**
 * Плавно открывает блок снизу вверх
 * @param {string} selector - CSS-селектор блока
 */
 _slideUpFromBottom(selector) {
    const element = this.shadowRoot.querySelector(selector);
    if (!element) {
        console.error(`Элемент с селектором "${selector}" не найден.`);
        return;
    }
    // Начальные стили для анимации
    element.style.opacity = '0';
    element.style.transform = 'translateY(100%)';
    element.style.transition = 'opacity 0.5s ease-out, transform 0.5s ease-out';
    element.style.display = 'block';

    // Задержка для старта анимации
    setTimeout(() => {
        element.style.opacity = '1';
        element.style.transform = 'translateY(0)';
    }, 1000); // Скр
  }
}

customElements.define('product-details', ProductDetails);
