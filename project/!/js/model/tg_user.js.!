/*  Telegram-пользователь. */

class User {
    constructor() {
     this.CurrentUserIdKey        = 'TgUser-CurrentUserId';
     this.CurrentUserFirstNameKey = 'TgUser-CurrentUserFirstName';
     this.CurrentUserLastNameKey  = 'TgUser-CurrentUserLastName';
     this.CurrentUserNameKey      = 'TgUser-CurrentUserName';
     this.CurrentShopIdKey        = 'TgUser-CurrentShopId';
     this.CurrentUsersSessionIdKey= 'TgUser-CurrentUsersSessionId';
     this.CurrentUserCityFiasIdKey= 'TgUser-CurrentUserCityFiasId';
     this.CurrentUserCityKey      = 'TgUser-CurrentUserCity';
     return this;
    }

  initialize(user = null){
   console.log('initialize =>', user);
   if(user) {
     this.setCurrentUserId(user.id); 
     this.setCurrentUserFirstName(user.first_name); 
     this.setCurrentUserLastName(user.last_name); 
     this.setCurrentUserName(user.username); 
   } else console.log('not initialized ');
     return this;
  }

  get(){
    let o = new Object();
//    o->userId=
  }


  getCurrentUserIdInitialized(){
     console.log('this.getCurrentUserId() =>', this.getCurrentUserId());
     return (this.getCurrentUserId() !== null); 
  }


  setCurrentUserId(value = null){
  console.log('this.setCurrentUserId() =>',  value);
   if(value) {
     localStorage.setItem(this.CurrentUserIdKey, value);
   }
     return this;
  }

  getCurrentUserId(){
     return localStorage.getItem(this.CurrentUserIdKey);
  }

  setCurrentUserFirstName(value = null){
  console.log('this.setCurrentUserFirstName =>',  value);
   if(value)
     localStorage.setItem(this.CurrentUserFirstNameKey, value);
     return this;
  }

  getCurrentUserFirstName(){
     return localStorage.getItem(this.CurrentUserFirstNameKey);
  }


  setCurrentUserLastName(value = null){
  console.log('this.setCurrentUserLastName =>',  value);
   if(value)
     localStorage.setItem(this.CurrentUserLastNameKey, value = null);
     return this;
  }

  getCurrentUserLastName(){
     return localStorage.getItem(this.CurrentUserLastNameKey);
  }

  setCurrentUserName(value = null){
  console.log('this.setCurrentUserName =>',  value);
   if(value)
     localStorage.setItem(this.CurrentUserNameKey, value = null);
     return this;
  }

  getCurrentUserName(key){
     return localStorage.getItem(this.CurrentUserNameKey);
  }

  setCurrentShopId(value = null){
  console.log('this.setCurrentShopId =>',  value);
   if(value)
    localStorage.setItem(this.CurrentShopId, value = null);
    return this;
  }


  getCurrentUsersSessionId(){
    return localStorage.getItem(this.CurrentUsersSessionIdKey);
  }


  setCurrentUsersSessionId(value = null){
  console.log('this.setCurrentUsersSessionId =>',  value);
   if(value)
    localStorage.setItem(this.CurrentUsersSessionIdKey, value = null);
    return this;
  }

  setCurrentUserCityFiasId(value = null){
  console.log('this.setCurrentUserCityFiasId =>',  value);
   if(value)
    localStorage.setItem(this.CurrentUserCityFiasIdKey, value = null);
    return this;
  }

  getCurrentUserCityFiasId(){
    return localStorage.getItem(this.CurrentUserCityFiasIdKey);
  }

  setCurrentUserCity(value = null){
  console.log('this.setCurrentUserCity =>',  value);
   if(value)
    localStorage.setItem(this.setCurrentUserCityKey, value = null);
    return this;
  }

  getCurrentUserCity(){
    return localStorage.getItem(this.CurrentUserCityKey);
  }


  getCurrentShopId(){
    return localStorage.getItem(this.CurrentShopIdKey);
  }

  
  unset(key){
    localStorage.removeItem(key);
    return this;
  }

 }

