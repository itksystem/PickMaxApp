// Обработчик взаимодействия с AuthService
const fetch = require('node-fetch');
require('dotenv').config();


class AuthServiceClientHandler {
    constructor() {
        this.authServiceLogonUrl = process.env.AUTH_SERVICE_LOGIN_URL;
        this.authServiceRegisterUrl =  process.env.AUTH_SERVICE_REGISTER_URL;
    }

    /**
     * Метод для выполнения запроса на авторизацию
     * @param {string} email - Email пользователя
     * @param {string} password - Пароль пользователя
     * @returns {Object} - Объект с результатом авторизации
     */
    async login(email, password) {
        try {
            const response = await fetch(this.authServiceLogonUrl, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ email, password })
            });

            const data = await response.json();
            if (response.ok) {
                console.log(`User ${email} successfully logged in.`);
                return { success: true, data };
            } else {
                console.log(`Login failed for user ${email}: ${JSON.stringify(data)}`);
                return { success: false, status: response.status, data };
            }
        } catch (error) {
            console.log(`Error during login for user ${email}: ${error.message}`);
            return { success: false, error: error.message };
        }
    }

/**
     * Метод для выполнения запроса на регистрацию пользователя
     * @param {string} email - Email пользователя
     * @param {string} password - Пароль пользователя
     * @returns {Object} - Объект с результатом регистрации
     */
async register(email, password) {
    try {
        const response = await fetch(this.authServiceRegisterUrl, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ email, password })
        });

        const data = await response.json();
        if (response.ok) {
            console.log(`User ${email} successfully logged in.`);
            return { success: true, data };
        } else {
            console.log(`Login failed for user ${email}: ${JSON.stringify(data)}`);
            return { success: false, status: response.status, data };
        }
    } catch (error) {
        console.log(`Error during login for user ${email}: ${error.message}`);
        return { success: false, error: error.message };
    }
}

}

module.exports = AuthServiceClientHandler;
