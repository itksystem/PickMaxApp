const OrderStatus = Object.freeze({
    NEW: 'NEW', // Новый заказ
    DELIVERY_TYPE_SPECIFIED: 'DELIVERY_TYPE_SPECIFIED', // Тип доставки указан
    PAYMENT_TYPE_SPECIFIED: 'PAYMENT_TYPE_SPECIFIED', // Тип оплаты указан
    PAYMENT_COMPLETED: 'PAYMENT_COMPLETED', // Оплата выполнена
    ORDER_BEING_PREPARED: 'ORDER_BEING_PREPARED', // Заказ формируется
    ORDER_SENT_TO_DELIVERY: 'ORDER_SENT_TO_DELIVERY', // Заказ передан в доставку
    SUCCESSFULLY_DELIVERED: 'SUCCESSFULLY_DELIVERED', // Успешно доставлен
    CANCELED: 'CANCELED', // Отменён
});


class OrderDto {
    constructor(dbRecord = {}) {
        this.orderId = dbRecord.order_id || null;
        this.userId = dbRecord.user_id || null;
        this.price = dbRecord.price || null;
        this.status = dbRecord.status || 'PENDING';
        this.createdAt = dbRecord.created_at || null;
        this.updatedAt = dbRecord.updated_at || null;
        this.billingTransactionId = dbRecord.billing_transaction_id || null;
    }


// Функция для проверки валидности статуса
     isValidOrderStatus(status) {
          return Object.values(OrderStatus).includes(status);
    }
/*
console.log(isValidOrderStatus('NEW')); // true
console.log(isValidOrderStatus('INVALID')); // false
*/
    // Getters
    getOrderId() {
        return this.orderId;
    }

    getUserId() {
        return this.userId;
    }

    getPrice() {
        return this.price;
    }

    getStatus() {
        return this.status;
    }

    getCreatedAt() {
        return this.createdAt;
    }

    getUpdatedAt() {
        return this.updatedAt;
    }

    getBillingTransactionId() {
        return this.billingTransactionId;
    }

    // Setters
    setOrderId(orderId) {
        this.orderId = orderId;
    }

    setUserId(userId) {
        this.userId = userId;
    }

    setPrice(price) {
        this.price = price;
    }

    setStatus(status) {
        if (Object.values(OrderStatus).includes(status)) {
            this.status = status;
        } else {
            throw new Error('Invalid status value');
        }
    }
    setCreatedAt(createdAt) {
        this.createdAt = createdAt;
    }

    setUpdatedAt(updatedAt) {
        this.updatedAt = updatedAt;
    }

    setBillingTransactionId(billingTransactionId) {
        this.billingTransactionId = billingTransactionId;
    }
}

module.exports = OrderDto;
